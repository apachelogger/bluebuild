#!/bin/ruby
#--
# Copyright (C) 2014 Harald Sitter <sitter@kde.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License or (at your option) version 3 or any later version
# accepted by the membership of KDE e.V. (or its successor approved
# by the membership of KDE e.V.), which shall act as a proxy
# defined in Section 14 of version 3 of the license.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++

#--
# 5667  execve("/usr/sbin/rund-nspawn", ["rund-nspawn", 
# "-D", "/var/lib/manjarobuild/stable-i686/root", 
# "--bind=/var/cache/pacman/pkg/", 
# "--", "pacman", "-Syu", "--noconfirm'"), [/* 27 vars */]) = 0
#++

require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: example.rb [options]"

  opts.on("-D DIR") do |d|
    options[:dir] = d
  end

  opts.on("--bind=BIND") do |b|
    options[:bind] = b
  end
end.parse!

p options
p ARGV

# For now we pray that this does not ever change in any way :S
dir=options[:dir]
bind=options[:bind]

def run(str)
    puts "systemd-nspawn-simulator: #{str}"
    system(str)
end

run("mount -o bind /proc '#{dir}/proc/'")
run("mount -o bind /sys '#{dir}/sys/'")
run("mount -o bind /dev '#{dir}/dev/'")
run("mkdir -p '#{dir}/dev/pts'")
run("mount -t devpts devpts '#{dir}/dev/pts/'")

run("cp '/etc/resolv.conf' '#{dir}/etc/'") if File.exist?('/etc/resolv.conf')

run("mkdir -p '#{dir}/#{bind}'")
run("mount -o bind #{bind} '#{dir}/#{bind}'")

run("chroot #{dir} #{ARGV.join(' ')}")

run("umount '#{dir}/#{bind}'")

run("umount '#{dir}/dev/pts'")
run("umount '#{dir}/dev'")
run("umount '#{dir}/sys'")
run("umount '#{dir}/proc'")
